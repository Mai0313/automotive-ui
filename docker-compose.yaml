services:
  ui:
    image: ghcr.io/mai0313/automotive-ui:latest
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      target: prod
    environment:
      EXPO_PUBLIC_OPENAI_API_TYPE: openai
      EXPO_PUBLIC_OPENAI_BASE_URL: http://localhost:8889/v1
      EXPO_PUBLIC_OPENAI_API_KEY: no-key-provided
      EXPO_PUBLIC_OPENAI_API_VERSION: 2025-04-01-preview
      EXPO_PUBLIC_OPENAI_MODEL: xxx
      EXPO_PUBLIC_WS_SERVER_URL: ws://localhost:4000
      EXPO_PUBLIC_HTTP_SERVER_URL: http://localhost:4001
      EXPO_PUBLIC_REALTIME_VOICE_URL: ws://localhost:8100/ws
      POSTGRES_URL: postgresql://postgres:postgres@postgresql:5432
    command:
      - npm
      - run
      - web
    ports:
      - 8081:8081
    volumes:
      - ./.env:/app/.env
    pull_policy: always
    restart: always

  ws:
    image: ghcr.io/mai0313/automotive-ui:latest
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      target: prod
    environment:
      POSTGRES_URL: postgresql://postgres:postgres@postgresql:5432
      EXPO_PUBLIC_WS_SERVER_URL: ws://localhost:4000
      EXPO_PUBLIC_HTTP_SERVER_URL: http://localhost:4001
    command:
      - npm
      - run
      - ws
    ports:
      - ${WS_SERVER_PORT:-4000}:4000
      - ${HTTP_SERVER_PORT:-4001}:4001
    volumes:
      - ./.env:/app/.env
    pull_policy: always
    restart: always

  postgresql:
    image: postgres:alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    healthcheck:
      test: pg_isready -U postgres
      start_period: 10s
      timeout: 1s
      retries: 5
      interval: 5s
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    restart: always
    pull_policy: always

volumes:
  postgresql-data: {}
