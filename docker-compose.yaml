services:
  ui:
    image: ghcr.io/mai0313/automotive-ui:latest
    depends_on:
      - postgresql
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      target: prod
    command:
      - npm
      - run
      - web
    ports:
      - 8081:8081
    volumes:
      - ./docker/.env.deploy:/app/.env
    pull_policy: always
    restart: always

  ws:
    image: ghcr.io/mai0313/automotive-ui:latest
    depends_on:
      - postgresql
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      target: prod
    command:
      - npm
      - run
      - ws
    ports:
      - 4000:4000
      - 4001:4001
    volumes:
      - ./docker/.env.deploy:/app/.env
    pull_policy: always
    restart: always

  postgresql:
    image: postgres:alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    healthcheck:
      test: pg_isready -U postgres
      start_period: 10s
      timeout: 1s
      retries: 5
      interval: 5s
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    restart: always
    pull_policy: always

volumes:
  postgresql-data: {}
